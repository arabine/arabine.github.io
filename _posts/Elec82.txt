(((Magazine: PC Team 78)))
(((Rubrique : Team Pratik)))
(((Sous Rubrique : électronique)))

(((titre))) TeamBot (7 et fin) – Le robot complet

(((chapo)))
Durant les précédents articles, nous avons développé quelques modules de robotique indépendants. Nous allons maintenant les assembler afin de finir notre robot suiveur de ligne appelé TeamBot.

(((texte)))
Rappelons brièvement le matériel et les connaissances que nous possédons. D'une part nous savons maintenant comment programmer les microcontrôleurs de la famille PIC 16F84. Deux processeurs de ce modèle nous servirons dans le robot . L'un contrôlera la carte moteur, tandis que l'autre jouera le rôle de la stratégie. (c'est la partie "cerveau") Ce dernier sera le nerf central de notre électronique : il recevra les informations en provenance des capteurs (les "yeux") et enverra des ordres aux moteurs. (les "jambes") Pour plus de facilité, nous appellerons le premier processeur "capteurs" et le second "PWM" (Pulse Width Modulation) en rapport avec leurs fonctions respectives.

(((inter))) Un peu de mécanique
La robotique n'est pas exclusivement un domaine réservé à l'électronique et à l'informatique. Au contraire même, ces deux matières ne sont que minoritaires au sein d'un robot. La mécanique tient sûrement la part la plus importante. Un robot bien pensé, stable, léger et robuste sont les critères minimums de réussite. Par exemple, une mécanique bien pensée peut se distinguer par des emplacements réservés aux cartes électroniques, une facilité d'accès à tous les éléments internes et par la modularité de l'ensemble. Dans le cas de notre robot, il va falloir jouer la récupération. La première chose à faire est de monter un châssis. Ce châssis sera la base du robot et devra être conçu intelligemment. Par exemple, il faut réserver des emplacements pour les cartes électroniques mais également les câbles et les fils de liaisons, souvent très encombrants. La photo ci-contre montre un exemple de chassis, avec ses moteurs. Notons qu'un trou central a été percé afin de laisser passer les fils du moteur. Il reste assez de place autour pour y fixer une petite carte moteurs ou des batteries par exemple. Deux roues folles seront placées à l'avant et à l'arrière du robot, alignées sur l'axe central. Bien entendu, ce n'est pas la meilleure solution pour les terrains accidentés ; TeamBot devra se contenter de surfaces complètement planes. Enfin, il faudra réserver un espace de fixation pour les capteurs de ligne. Une astuce consiste à réaliser des trous oblongs verticaux de façon à pouvoir ajuster précisément la distance entre le sol et les capteurs. Le reste du robot sera monté en hauteur en confectionnant des étages où viendront se loger les autres cartes, des capteurs et tout autre module électronique ou mécanique. Ces étages pourront s'appuyer sur des tiges filetées, des profilés ou tout autre élément métallique fixé au châssis.

(((inter))) La carte moteurs
Nous avons expliqué le principe de fonctionnement du pont en H dans le PC team 77. Nous allons donc passer brièvement sur cette partie. Nous avons opté pour un pont en H tout intégré pour des raisons de place et de coût, par rapport à une solution faite à partir de transistors MOS. Le circuit est le fameux L293, double pont en H tout intégré. Ce circuit est légion dans les contrôles de moteurs à courant continu et est tout à fait adapté à notre application compte tenu du courant maximum utilisé par nos moteurs. (600mA) Attention cependant car il existe plusieurs versions. Le L293D possède des diodes de roues libres en interne tandis que les versions L293B et E sont capables de débiter un courant plus important. (1A) Nous utiliserons donc cette dernière version, qui se présente sous la forme d'un boîtier DIP classique à 20 broches. Pour que le circuit fonctionne correctement, quatre diodes de roue libre par moteur sont à ajouter à l'extérieur du circuit. Ces diodes doivent être rapides et doivent pouvoir commuter des courants assez important de l'ordre de l'Ampère. Il est important de choisir des diodes rapides afin de ne pas détériorer le pont en H. Nous avons opté pour des diodes Schottky faible puissance (BYV 10-20 A) capables de supporter un courant d'un Ampère sous 20 Volts. Le défaut majeur du L293 est qu'il a tendance à chauffer, surtout si on lui envoie un signal de type PWM comme dans notre application. La commutation à fréquence rapide provoque un fort dégagement de chaleur qu'il peut être difficile de dissiper car ce circuit est en boîtier DIP. Pour pallier en partie ce problème le constructeur a prévu quatre broches servant à évacuer la chaleur. Ces broches seront reliées à la masse, et, au mieux, à une large zone de cuivre ou d'étain. (Un bon plan de masse jouera parfaitement son rôle) Dans tous les cas, veillez à ne pas pousser le circuit dans ses derniers retranchements car ce pont en H est relativement fragile et malheureusement un peu cher. (compter environ 10€) La carte moteur contient également le système d'alimentation de toute l'électronique du robot. Cette partie reste très classique et fait appel aux traditionnels régulateurs 7805 pour les circuits logiques et 7806 pour les moteurs. Bien sûr, cette partie devra être modifiée selon les moteurs utilisés. Une seule batterie assure l'alimentation du robot. Pour des raisons de perturbations provoquées par les moteurs, on aurait pu utiliser deux batteries : l'une dédiée aux moteurs et l'autre au reste de l'électronique. Les deux parties étant isolées électriquement par des optocoupleurs. On évite ainsi de perturber toute l'électronique. Enfin, une diode de puissance située juste après le connecteur de la batterie protégera les circuits de toute inversion malencontreuse de la polarité.

(((inter))) Les microcontrôleurs
Notre robot sera équipé de deux microcontrôleurs. Ce système a pour but de simplifier la programmation de chaque processeur. C'est généralement une des meilleures lorsque les processeurs utilisés ne sont pas très puissants. Lorsque le microcontrôleur dédié à la commande des moteurs (PWM) sera parfaitement fonctionnel, il ne sera plus nécessaire de toucher à sa programmation. Le microcontrôleur "capteurs" aura donc tout son temps processeur dédié à la stratégie et au traitement des informations en provenance des capteurs. Dès lors, il faut créer une communication entre les deux processeurs. La donnée véhiculée sera l'ordre de marche des moteurs (avant, arrière, tourner vers la gauche etc.) comme nous l'avons vu dans les PC team 76 et 77. Le bus de communication est de 4 bits et il n'est pas utile de créer un quelconque handshake : l'ordre de marche sera toujours présente sur le bus. Une petite remarque concernant l'électronique des processeurs : le processeur "capteurs" sera toujours l'émetteur du message et, partant, aura son port en sortie. L'inverse est valable pour le processeur "PWM". Afin de limiter tout risque de court circuit, les ports devront être configurés en collecteur ouvert, une série de résistances externes jouant le rôle de pull-up au 5V. Il n'y a aucune raison de s'inquiéter durant la période de démarrage car les ports des microcontrôleurs s'initialisent en entrée lors d'un Reset pour des raisons de sécurité. Les premières routines assembleurs seront dédiées à l'initialisation des ports, comme d'habitude dans le monde des microcontrôleurs.

(((inter))) Capteurs et implantation
Les capteurs seront au nombre de trois câblés à l'identique. Pour plus d'information, reportez-vous au PC team 78 qui traite sur toute sorte de capteurs. Les valeurs des résistances ont été choisies de façon à détecter une différence de couleur entre le noir et le blanc. Pour les utiliser sur d'autres couleurs il suffit de changer la valeur de ces résistances, sachant que le mieux est de placer des potentiomètres ou des trimmers (potentiomètres de précision) et de faire des essais. Ces capteurs bons marchés ont un seul inconvénient, et de taille : leur distance de détection est très faible ce qui impose de les utiliser à une distance maximale de 4mm au-dessus du sol. En ce qui concerne l'implantation de toutes ces fonctions, nous vous conseillons le schéma ci contre. Nous avons donc trois cartes : une carte capteurs, une carte moteurs et une carte processeurs. Des plaques à trous ou à bandes cuivrées supporteront parfaitement toute l'électronique. Quant aux liaisons carte à carte nous vous conseillons d'utiliser des borniers à vis ou embrochables. Bien sûr, c'est à vous d'adapter cela à vos besoins et selon votre matériel à disposition. Nous vous conseillons également de munir la batterie d'un interrupteur qui se révèlera très pratique à l'usage.

(((inter))) Conclusion
Notre série sur les robots touche à sa fin. Il reste encore du travail à effectuer, nous n'avons fourni que les bases pour commencer dans de bonnes conditions. Nous vous laissons le soin de programmer le microcontrôleur "capteurs" comme bon vous semble. La programmation en elle-même n'est pas très difficile. Si vous cherchez une utilisation pour votre robot, nous vous conseillons de participer à la coupe de robotique organisée par l'ANSTJ. (http://www.anstj.org/robot/)

(((signature)))
Anthony Rabine - arabine@programmationworld.com

(((images)))
elec1.tif : Le schéma de câblage du L293E avec ses diodes de roue libre.
elec2.tif : Vu du dessous du châssis, avec les deux moteurs fixés.
elec3.tif : Principe de commande du L293E.
elec4.tif : La carte moteurs terminée, au centre règne le L293 et en bas l'alimentation.
elec5.tif : Un exemple d'implantation du système sur trois cartes.
elec6.tif : La position des capteurs permet de déterminer la trajectoire de la ligne noire.
